from sudoku_class import Sudoku
from solver_class import Solver


sudoku_map_list = {
    'completed': [1, 2, 3, 4, 5, 6, 7, 8, 9, 7, 8, 9, 1, 2, 3, 4, 5, 6, 4, 5, 6, 7, 8, 9, 1, 2, 3, 3, 1, 2, 8, 4, 5, 9, 6, 7, 6, 9, 7, 3, 1, 2, 8, 4, 5, 8, 4, 5, 6, 9, 7, 3, 1, 2, 2, 3, 1, 5, 7, 4, 6, 9, 8, 9, 6, 8, 2, 3, 1, 5, 7, 4, 5, 7, 4, 9, 6, 8, 2, 3, 1],
    'dispersed': [1, 2, 3, 0, 5, 6, 7, 8, 9, 7, 8, 9, 1, 2, 3, 4, 5, 0, 4, 5, 6, 7, 8, 9, 1, 2, 3, 3, 1, 2, 8, 4, 0, 9, 6, 7, 6, 9, 7, 3, 1, 2, 8, 4, 5, 8, 0, 5, 6, 9, 7, 3, 1, 2, 2, 3, 1, 5, 7, 4, 6, 9, 8, 9, 6, 8, 2, 3, 1, 5, 7, 4, 5, 7, 4, 9, 6, 8, 0, 3, 1],
    'two_group': [1, 2, 3, 4, 5, 6, 7, 8, 9, 7, 8, 0, 1, 2, 3, 0, 5, 6, 4, 5, 6, 7, 8, 9, 1, 2, 3, 3, 1, 2, 8, 4, 5, 9, 6, 7, 6, 9, 0, 3, 1, 2, 8, 4, 5, 8, 4, 5, 6, 9, 7, 3, 1, 2, 2, 3, 1, 5, 7, 4, 6, 9, 8, 9, 6, 8, 2, 3, 1, 5, 7, 4, 5, 7, 4, 9, 6, 8, 2, 3, 1],
    'half_miss': [0, 2, 0, 4, 0, 6, 7, 0, 9, 7, 8, 0, 1, 0, 3, 0, 5, 6, 4, 5, 6, 7, 8, 9, 1, 2, 3, 3, 1, 2, 0, 4, 5, 0, 6, 7, 6, 9, 0, 3, 1, 2, 8, 4, 5, 8, 4, 5, 6, 9, 7, 3, 1, 2, 2, 3, 1, 0, 7, 0, 0, 9, 8, 9, 6, 0, 0, 0, 1, 0, 7, 4, 5, 7, 0, 9, 6, 0, 2, 3, 1],
    'real_test': [0, 0, 0, 0, 0, 4, 0, 9, 0, 8, 0, 2, 9, 7, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 4, 9, 1, 5, 7, 0, 1, 3, 0, 5, 0, 9, 2, 0, 5, 7, 9, 1, 2, 0, 0, 0, 0, 0, 0, 7, 0, 0, 2, 6, 0, 3, 0, 0, 0, 0, 3, 8, 2, 0, 5, 0, 2, 0, 5, 0, 0, 0, 0, 0],
    '_hardest_': [8, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 3, 6, 0, 0, 0, 0, 0,
                  0, 7, 0, 0, 9, 0, 2, 0, 0,
                  0, 5, 0, 0, 0, 7, 0, 0, 0,
                  0, 0, 0, 0, 4, 5, 7, 0, 0,
                  0, 0, 0, 1, 0, 0, 0, 3, 0,
                  0, 0, 1, 0, 0, 0, 0, 6, 8,
                  0, 0, 8, 5, 0, 0, 0, 1, 0,
                  0, 9, 0, 0, 0, 0, 4, 0, 0],
    'all_zeros': [0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0]
}

for i in sudoku_map_list.keys():
    if input(' Continue ? : ') == 'n':
        break
    this_sudoku = Sudoku(sudoku_map_list[i])
    print()
    print(' Sudoku provided: ')
    this_sudoku.display()
    print()
    sudoku_solved = Solver()
    sudoku_solved.solve(this_sudoku.sudoku_map)
